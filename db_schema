CN_User
table 'cn_users'
	- id(Integer, primary_key=True)
	- username(String, unique=True)
	- passwordhash(String)
	- token(UUID)
	- spam_count(Integer)


CN_Report
table 'cn_reports'
	- id(Integer)
	- title(String)
	- subjectcode(String, ForeignKey('subjects.code'))
	#Address
	- house_number(String)
	- street_prefix(String)
	- street(String)
	- street_suffix(String)
	- apartment(String)
	- lon(Numerical)
	- lat(Numerical)
	#Address reported from
	- lon_reported_from(float)
	- lat_reported_from(float)
	- time_reported(DateTime)
	- time_began(DateTime)
	- time_ended(DateTime)
	- is_emergency(Boolean)
	- description(String)
	#Reported By
	- user_id(Integer, ForeignKey('cn_users.id'))
	- active(Boolean)

	subject = relationship("Subject", backref=backref('cn_reports'))
	user    = relationship("CN_User", backref=backref('cn_reports'))

CN_Report_OhioRevisedCode
table 'cn_report_ohio_revised_code'
	- report(Integer, ForeignKey('cn_reports.id'), primary_key=True)
	- ohio_revised_code(Numeric, ForeignKey('ohio_revised_codes.code'), primary_key=True)


CN_StolenProperty
table 'cn_stolen_property'
	- id(Integer, primary_key=True)
	- code(Integer, ForeignKey('property_types.code'))
	- manufacturer(String)
	- model(String)
	- description(String)
	- value(Float)
	- reportID(Integer, ForeignKey('cn_reports.id'))

	report = relationship("CN_Report", backref=backref('cn_stolen_property'))
	property_type = relationship("PropertyType", backref=backref('cn_stolen_property'))


CN_Perpetrator
table 'cn_perpetrators'
	- id(Integer, PrimaryKey)
	- est_dob(DateTime)
	- sex(String)
	- race(String)
	- description(String)
	- reportID(Integer, ForeignKey('cn_reports.id'))

	report = relationship("CN_Report", backref=backref('cn_perpetrators'))